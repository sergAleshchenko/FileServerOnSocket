Текст задания:

       Файловый сервер:

       Приложение, которое обеспечивает пользователям доступ к файлам, которые пользователь
       сам добавляет на сервер.

       Сервер работает с одной корневой папкой, ко всем файлам которой он должен предоставлять
       доступ. Каждому файлу сервер должен уметь сопоставлять уникальный идентификатор
       зависящий только от содержимого файла (т. е. 2 файла с одинаковым содержимым,
       но разными именами будут иметь одинаковый идентификатор). Считаем, что изначально
       среди файлов в рабочей директории нет файлов с одинаковым содержимым.

       Список функционала:
       1) Поиск - пользователь передает строку, сервер выполняет поиск среди доступных
       файлов на вхождение поисковой строки в название файла (опционально - поддержка wildcards).
       Результат запроса - набор пар имя файла/уникальный идентификатор. Если в результате
       получается больше 25 пар, то возвращаем только 25 пар.

       2) Скачивание файла - клиент передает уникальный идентификатор файла и получает
       в ответ от сервера файл с таким идентификатором.

       3) Заливка файла - пользователь передает серверу файл. Сервер присваивает ему
       идентификатор (на основе содержимого) и сохраняет в рабочую директорию.
       При этом если файл с таким идентификатором уже существует, то файл не должен быть
       записан на диск.


       4) Удаление файла - клиент передает идентификатор файла, сервер удаляет файл с
       таким идентификатор.


       Варианты - web service/web interface/свой протокол на сокетах (реализовать свой клиент).

Комментарии:
       1) Все пункты задания выполнены с одним "но": операции выполняются
       по именам файлов. Как прикрутить сюда id - придумать не успел. Есть пара идей, пока в теории.

       2) Также нет никакой морды. Все по простому, в консоли.

       3) Запускаем класс Main, следуем инструкциям на экране.

       4) Иногда, чтобы переданный файл отобразился слева в структуре проекта, нужно открыть
       и закрыть выпадающий список файлов директории (или просто открыть папку и посмотреть).


       Сергей Алещенко
